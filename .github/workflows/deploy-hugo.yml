# 工作流名称
name: Deploy Hugo site to Pages

# 触发条件：当代码被 push 到 main 分支时
on:
  push:
    branches:
      - main
  # 允许你手动在 Actions 页面触发此工作流
  workflow_dispatch:

# 设置任务的默认权限
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，新的部署会取消旧的
concurrency:
  group: "pages"
  cancel-in-progress: true

# 部署任务
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest # 在最新的 Ubuntu 虚拟机上运行
    steps:
      # 第1步：检出你的代码（包括 git submodule 管理的主题）
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # 第2步：设置 Hugo 环境
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest' # 使用最新版本的 Hugo
          extended: true

      # 第3步：设置 GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # 第4步：构建网站 (最关键的一步)
      # 使用 Hugo 命令生成静态文件，并自动设置正确的 baseURL
      - name: Build with Hugo
        run: hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      # 第5步：上传构建好的网站文件
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      # 第6步：部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4